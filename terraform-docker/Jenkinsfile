pipeline {
    agent any

    environment {
        IMAGE_NAME = "lordson19/terraform-docker"
        TAG = "latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/LORDSON11/learn-jenkins.git', branch: 'main'
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                withCredentials([
                    file(credentialsId: 'node-key', variable: 'NODE_PEM'),
                    usernamePassword(credentialsId: 'aws-creds', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    dir('terraform-docker/terraform') {
                        sh '''
                            mkdir -p ${WORKSPACE}/.ssh
                            cp $NODE_PEM ${WORKSPACE}/.ssh/node.pem
                            chmod 400 ${WORKSPACE}/.ssh/node.pem

                            export TF_VAR_private_key_path=${WORKSPACE}/.ssh/node.pem
                            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY

                            terraform init
                            terraform apply -auto-approve
                        '''
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME:$TAG .'
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh '''
                        echo "$PASS" | docker login -u "$USER" --password-stdin
                        docker push $IMAGE_NAME:$TAG
                    '''
                }
            }
        }
    }
}
